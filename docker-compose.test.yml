version: '3.8'

services:
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=test
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
      - DATABASE_URL=postgresql://${POSTGRES_USER:-miu}:${POSTGRES_PASSWORD:-miu}@postgres:5432/${POSTGRES_DB:-miu}
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-miu}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-miu}
      - POSTGRES_DB=${POSTGRES_DB:-miu}
    volumes:
      - postgres_test:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 256M

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_test:/data
    command: redis-server --save 60 1 --loglevel warning
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 128M

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.test.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.retention.time=1d'
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M



volumes:
  postgres_test:
  redis_test: 